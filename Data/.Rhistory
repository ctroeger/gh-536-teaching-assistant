head(draws[,1:1000])
head(draws)
draws <- as.data.frame(draws)
head(draws)
ggplot(draws, aes(x = V1, y = V2)) + geom_point()
ggplot(draws, aes(x = V1, y = V2)) + geom_point()
a <- ggplot(draws, aes(x = V1, y = V2)) + geom_point()
b <- ggplot(draws, aes(x = V1)) + geom_histgram()
b <- ggplot(draws, aes(x = V1)) + geom_histogram()
c <- ggplot(draws, aes(x= V2)) + geom_histogram()
ggpairs(draws)
ggpairs(draws)
# Simulate 1000 draws from the distribution
draws <- mvrnorm(1000, mean_vals, varcov)
mean_vals <- coef(mod3)
varcov <- vcov(mod3)
# Simulate 1000 draws from the distribution
draws <- mvrnorm(1000, mean_vals, varcov)
# What is this object? It is 1000 rows and 8 cols
dim(draws)
# Each column is a coefficient from the model (named in object)
# while each row is a conditional realization of the coefficient
# (depends on itself and other variables in the model)
coef(mod3)[1]
mean(draws[,1])
# What do we do with this?
# Let's say we want to know if the effect of the intervention is statistically significant in South Africa (country = 2) and in the high risk strata (strata = 1)
# Create our values. Make sure they are ordered the same as the draws
colnames(draws)
head(draws)
---
title: "Bootstrap Simulations"
author: "Chris Troeger"
date: "2/24/2022"
output: html_document
---
```{r}
library(data.table)
library(ggplot2)
library(gridExtra)
library(MASS)
set.seed(14)
zt <- fread("C:/Users/ctroeger/OneDrive - UW/PhD/GH Teaching Assistant/Data/zamstar.csv")
mod3 <- glm(d ~ offset(log(n)) + country*strata_tst*hh, data = zt, family = poisson)
pred_zt <- expand.grid(country = c(1,2),
strata_tst = c(0,1),
hh = c(0,1),
n = 1000)
#n = mean(zt$n))
pred_zt$name <- c("Country1, Strata0, hh0 (Intercept)",
"Country2, Strata0, hh0",
"Country1, Strata1, hh0",
"Country2, Strata1, hh0",
"Country1, Strata0, hh0",
"Country2, Strata0, hh1",
"Country1, Strata1, hh1",
"Country2, Strata1, hh1")
pred_mod <- predict(mod3, newdata = pred_zt, se.fit = T)
pred_zt$prediction <- pred_mod[[1]]
pred_zt$se <- pred_mod[[2]]
# Prediction and SE are in log space
pred_zt$lin_pred <- exp(pred_zt$prediction)
pred_zt$lower <- exp(pred_zt$prediction - pred_zt$se * qnorm(0.975))
pred_zt$upper <- exp(pred_zt$prediction + pred_zt$se * qnorm(0.975))
# Let's convert to an incidence
pred_zt <- data.table(pred_zt)
pred_zt[, c("lin_pred","lower","upper") :=
lapply(.SD, function(x) x/n),
.SDcols = c("lin_pred","lower","upper")]
zt <- merge(zt, pred_zt, by = c("country","hh","strata_tst"))
ggplot(pred_zt, aes(x = name, y = lin_pred, ymin = lower, ymax = upper)) +
geom_point(size = 3) +
geom_errorbar(width = 0) +
coord_flip() +
geom_point(data = zt, aes(y = d/n.x, size = n.x), col = "purple", alpha = 0.4) +
guides(size = "none") +
theme_classic() + xlab("") + ylab("Incidence")
```
ggplot(pred_zt, aes(x = name, y = lin_pred, ymin = lower, ymax = upper)) +
geom_point(size = 3) +
geom_errorbar(width = 0) +
coord_flip() +
geom_point(data = zt, aes(y = d/n.x, size = n.x), col = "purple", alpha = 0.4) +
guides(size = "none") +
theme_classic() + xlab("") + ylab("Incidence")
ggplot(pred_zt, aes(x = name, y = lin_pred, ymin = lower, ymax = upper)) +
geom_point(size = 3) +
geom_errorbar(width = 0) +
coord_flip() +
geom_point(data = zt, aes(y = d/n.x, size = n.x), col = "purple", alpha = 0.4) +
guides(size = "none") +
theme_classic() + xlab("") + ylab("Incidence")
library(data.table)
library(ggplot2)
library(gridExtra)
library(MASS)
set.seed(14)
zt <- fread("C:/Users/ctroeger/OneDrive - UW/PhD/GH Teaching Assistant/Data/zamstar.csv")
mod3 <- glm(d ~ offset(log(n)) + country*strata_tst*hh, data = zt, family = poisson)
pred_zt <- expand.grid(country = c(1,2),
strata_tst = c(0,1),
hh = c(0,1),
n = 1000)
pred_zt$name <- c("Country1, Strata0, hh0 (Intercept)",
"Country2, Strata0, hh0",
"Country1, Strata1, hh0",
"Country2, Strata1, hh0",
"Country1, Strata0, hh0",
"Country2, Strata0, hh1",
"Country1, Strata1, hh1",
"Country2, Strata1, hh1")
pred_mod <- predict(mod3, newdata = pred_zt, se.fit = T)
pred_zt$prediction <- pred_mod[[1]]
pred_zt$se <- pred_mod[[2]]
# Prediction and SE are in log space
pred_zt$lin_pred <- exp(pred_zt$prediction)
pred_zt$lower <- exp(pred_zt$prediction - pred_zt$se * qnorm(0.975))
pred_zt$upper <- exp(pred_zt$prediction + pred_zt$se * qnorm(0.975))
# Let's convert to an incidence
pred_zt <- data.table(pred_zt)
pred_zt[, c("lin_pred","lower","upper") :=
lapply(.SD, function(x) x/n),
.SDcols = c("lin_pred","lower","upper")]
zt <- merge(zt, pred_zt, by = c("country","hh","strata_tst"))
ggplot(pred_zt, aes(x = name, y = lin_pred, ymin = lower, ymax = upper)) +
geom_point(size = 3) +
geom_errorbar(width = 0) +
coord_flip() +
geom_point(data = zt, aes(y = d/n.x, size = n.x), col = "purple", alpha = 0.4) +
guides(size = "none") +
theme_classic() + xlab("") + ylab("Incidence")
mod0 <- glm(d ~ offset(log(n)) + country*hh + strata_tst, data = zt, family = poisson)
zt <- fread("C:/Users/ctroeger/OneDrive - UW/PhD/GH Teaching Assistant/Data/zamstar.csv")
mod0 <- glm(d ~ offset(log(n)) + country*hh + strata_tst, data = zt, family = poisson)
summary(mod0)
mod0 <- glm(d ~ offset(log(n)) + country*hh + factor(strata_tst), data = zt, family = poisson)
summary(mod0)
head(zt)
mod0 <- glm(d ~ offset(log(n)) + country*hh + ecf + factor(strata_tst), data = zt, family = poisson)
summary(mod0)
mod0 <- glm(d ~ offset(log(n)) + country + hh*ecf + factor(strata_tst), data = zt, family = poisson)
summary(mod0)
pred_zt <- expand.grid(country = c(1,2),
strata_tst = c(0,1),
hh = c(0,1),
ecf = c(0,1)
n = 1000)
pred_zt <- expand.grid(country = c(1,2),
strata_tst = c(0,1),
hh = c(0,1),
ecf = c(0,1),
n = 1000)
pred_zt
head(pred_zt)
mod0 <- glm(d ~ offset(log(n)) + country*ecf + factor(strata_tst), data = zt, family = poisson)
summary(mod0)
mod0 <- glm(d ~ offset(log(n)) + country*hh + factor(strata_tst), data = zt, family = poisson)
summary(mod0)
mod0 <- glm(d ~ offset(log(n)) + country*hh + ecf + factor(strata_tst), data = zt, family = poisson)
summary(mod0)
pred_zt <- expand.grid(country = c(1,2),
strata_tst = c(0,1),
hh = c(0,1),
ecf = c(0,1),
n = 1000)
pnames <- paste0(ifelse(pred_zt$country == 1, "Zambia", "South Africa"),
" ", ifelse(pred_zt$strata_tst == 0, "Low risk", "High risk"),
" ", ifelse(hh == 0, "No HH","HH"),
" ", ifelse(ecf == 0, "No ECF","ECF"))
pnames <- paste0(ifelse(pred_zt$country == 1, "Zambia", "South Africa"),
" ", ifelse(pred_zt$strata_tst == 0, "Low risk", "High risk"),
" ", ifelse(pred_zt$hh == 0, "No HH","HH"),
" ", ifelse(pred_zt$ecf == 0, "No ECF","ECF"))
pnames
pred_zt$names <- paste0(ifelse(pred_zt$country == 1, "Zambia", "South Africa"),
", ", ifelse(pred_zt$strata_tst == 0, "Low risk", "High risk"),
", ", ifelse(pred_zt$hh == 0, "No HH","HH"),
", ", ifelse(pred_zt$ecf == 0, "No ECF","ECF"))
pred_zt$name <- paste0(ifelse(pred_zt$country == 1, "Zambia", "South Africa"),
", ", ifelse(pred_zt$strata_tst == 0, "Low risk", "High risk"),
", ", ifelse(pred_zt$hh == 0, "No HH","HH"),
", ", ifelse(pred_zt$ecf == 0, "No ECF","ECF"))
pred_mod <- predict(mod0, newdata = pred_zt, se.fit = T)
pred_zt$prediction <- pred_mod[[1]]
pred_zt$se <- pred_mod[[2]]
# Prediction and SE are in log space
pred_zt$lin_pred <- exp(pred_zt$prediction)
pred_zt$lower <- exp(pred_zt$prediction - pred_zt$se * qnorm(0.975))
pred_zt$upper <- exp(pred_zt$prediction + pred_zt$se * qnorm(0.975))
# Let's convert to an incidence
pred_zt <- data.table(pred_zt)
pred_zt[, c("lin_pred","lower","upper") :=
lapply(.SD, function(x) x/n),
.SDcols = c("lin_pred","lower","upper")]
zt <- merge(zt, pred_zt, by = c("country","hh","strata_tst","ecf"))
ggplot(pred_zt, aes(x = name, y = lin_pred, ymin = lower, ymax = upper)) +
geom_point(size = 3) +
geom_errorbar(width = 0) +
coord_flip() +
geom_point(data = zt, aes(y = d/n.x, size = n.x), col = "purple", alpha = 0.4) +
guides(size = "none") +
theme_classic() + xlab("") + ylab("Incidence")
mod0 <- glm(d ~ offset(log(n)) + country*hh + factor(strata_tst), data = zt, family = poisson)
zt <- fread("C:/Users/ctroeger/OneDrive - UW/PhD/GH Teaching Assistant/Data/zamstar.csv")
mod0 <- glm(d ~ offset(log(n)) + country*hh + factor(strata_tst), data = zt, family = poisson)
summary(mod0)
pred_zt <- expand.grid(country = c(1,2),
strata_tst = c(0,1),
hh = c(0,1),
#ecf = c(0,1),
n = 1000)
pred_zt$name <- paste0(ifelse(pred_zt$country == 1, "Zambia", "South Africa"),
", ", ifelse(pred_zt$strata_tst == 0, "Low risk", "High risk"),
", ", ifelse(pred_zt$hh == 0, "No HH","HH"),
", ", ifelse(pred_zt$ecf == 0, "No ECF","ECF"))
pred_mod <- predict(mod0, newdata = pred_zt, se.fit = T)
pred_zt$prediction <- pred_mod[[1]]
pred_zt$se <- pred_mod[[2]]
# Prediction and SE are in log space
pred_zt$lin_pred <- exp(pred_zt$prediction)
pred_zt$lower <- exp(pred_zt$prediction - pred_zt$se * qnorm(0.975))
pred_zt$upper <- exp(pred_zt$prediction + pred_zt$se * qnorm(0.975))
# Let's convert to an incidence
pred_zt <- data.table(pred_zt)
pred_zt[, c("lin_pred","lower","upper") :=
lapply(.SD, function(x) x/n),
.SDcols = c("lin_pred","lower","upper")]
zt <- merge(zt, pred_zt, by = c("country","hh","strata_tst","ecf"))
zt <- fread("C:/Users/ctroeger/OneDrive - UW/PhD/GH Teaching Assistant/Data/zamstar.csv")
mod0 <- glm(d ~ offset(log(n)) + country*hh + factor(strata_tst), data = zt, family = poisson)
summary(mod0)
pred_zt <- expand.grid(country = c(1,2),
strata_tst = c(0,1),
hh = c(0,1),
#ecf = c(0,1),
n = 1000)
pred_zt$name <- paste0(ifelse(pred_zt$country == 1, "Zambia", "South Africa"),
", ", ifelse(pred_zt$strata_tst == 0, "Low risk", "High risk"),
", ", ifelse(pred_zt$hh == 0, "No HH","HH"),
", ", ifelse(pred_zt$ecf == 0, "No ECF","ECF"))
pred_mod <- predict(mod0, newdata = pred_zt, se.fit = T)
pred_zt$prediction <- pred_mod[[1]]
pred_zt$se <- pred_mod[[2]]
# Prediction and SE are in log space
pred_zt$lin_pred <- exp(pred_zt$prediction)
pred_zt$lower <- exp(pred_zt$prediction - pred_zt$se * qnorm(0.975))
pred_zt$upper <- exp(pred_zt$prediction + pred_zt$se * qnorm(0.975))
# Let's convert to an incidence
pred_zt <- data.table(pred_zt)
pred_zt[, c("lin_pred","lower","upper") :=
lapply(.SD, function(x) x/n),
.SDcols = c("lin_pred","lower","upper")]
zt <- merge(zt, pred_zt, by = c("country","hh","strata_tst"))
ggplot(pred_zt, aes(x = name, y = lin_pred, ymin = lower, ymax = upper)) +
geom_point(size = 3) +
geom_errorbar(width = 0) +
coord_flip() +
geom_point(data = zt, aes(y = d/n.x, size = n.x), col = "purple", alpha = 0.4) +
guides(size = "none") +
theme_classic() + xlab("") + ylab("Incidence")
head(pred_zt)
1.69 - 1.56
mod0 <- glm(d ~ offset(log(n)) + country*hh + ecf*factor(strata_tst), data = zt, family = poisson)
zt <- fread("C:/Users/ctroeger/OneDrive - UW/PhD/GH Teaching Assistant/Data/zamstar.csv")
mod0 <- glm(d ~ offset(log(n)) + country*hh + ecf*factor(strata_tst), data = zt, family = poisson)
summary(mod0)
mod0 <- glm(d ~ offset(log(n)) + country + ecf*hh + factor(strata_tst), data = zt, family = poisson)
summary(mod0)
pred_zt <- expand.grid(country = c(1,2),
strata_tst = c(0,1),
hh = c(0,1),
ecf = c(0,1),
n = 1000)
pred_zt$name <- paste0(ifelse(pred_zt$country == 1, "Zambia", "South Africa"),
", ", ifelse(pred_zt$strata_tst == 0, "Low risk", "High risk"),
", ", ifelse(pred_zt$hh == 0, "No HH","HH"),
", ", ifelse(pred_zt$ecf == 0, "No ECF","ECF"))
pred_mod <- predict(mod0, newdata = pred_zt, se.fit = T)
pred_zt$prediction <- pred_mod[[1]]
pred_zt$se <- pred_mod[[2]]
# Prediction and SE are in log space
pred_zt$lin_pred <- exp(pred_zt$prediction)
pred_zt$lower <- exp(pred_zt$prediction - pred_zt$se * qnorm(0.975))
pred_zt$upper <- exp(pred_zt$prediction + pred_zt$se * qnorm(0.975))
# Let's convert to an incidence
pred_zt <- data.table(pred_zt)
pred_zt[, c("lin_pred","lower","upper") :=
lapply(.SD, function(x) x/n),
.SDcols = c("lin_pred","lower","upper")]
zt <- merge(zt, pred_zt, by = c("country","hh","strata_tst"))
zt <- merge(zt, pred_zt, by = c("country","hh","strata_tst","ecf"))
ggplot(pred_zt, aes(x = name, y = lin_pred, ymin = lower, ymax = upper)) +
geom_point(size = 3) +
geom_errorbar(width = 0) +
coord_flip() +
geom_point(data = zt, aes(y = d/n.x, size = n.x), col = "purple", alpha = 0.4) +
guides(size = "none") +
theme_classic() + xlab("") + ylab("Incidence")
summary(mod0)
table(zt$ecf, zt$country)
table(zt$hh, zt$country)
table(zt$hh, zt$ecf)
table(zt$d, zt$ecf)
t <- zt[, lapply(.SD, function(x) sum(x)),
.SDcols = c("d","n"),
by = c("ecf","hh")]
zt <- fread("C:/Users/ctroeger/OneDrive - UW/PhD/GH Teaching Assistant/Data/zamstar.csv")
t <- zt[, lapply(.SD, function(x) sum(x)),
.SDcols = c("d","n"),
by = c("ecf","hh")]
t
t[, incidence := d / n]
t
t
zt <- fread("C:/Users/ctroeger/OneDrive - UW/PhD/GH Teaching Assistant/Data/zamstar.csv")
t <- zt[, lapply(.SD, function(x) sum(x)),
.SDcols = c("d","n"),
by = c("ecf","hh")]
t[, incidence := d / n]
t
mod0 <- glm(d ~ offset(log(n)) + country + ecf*hh + factor(strata_tst), data = zt, family = poisson)
summary(mod0)
pred_zt <- expand.grid(country = c(1,2),
strata_tst = c(0,1),
hh = c(0,1),
ecf = c(0,1),
n = 1000)
pred_zt$name <- paste0(ifelse(pred_zt$country == 1, "Zambia", "South Africa"),
", ", ifelse(pred_zt$strata_tst == 0, "Low risk", "High risk"),
", ", ifelse(pred_zt$hh == 0, "No HH","HH"),
", ", ifelse(pred_zt$ecf == 0, "No ECF","ECF"))
pred_mod <- predict(mod0, newdata = pred_zt, se.fit = T)
pred_zt$prediction <- pred_mod[[1]]
pred_zt$se <- pred_mod[[2]]
# Prediction and SE are in log space
pred_zt$lin_pred <- exp(pred_zt$prediction)
pred_zt$lower <- exp(pred_zt$prediction - pred_zt$se * qnorm(0.975))
pred_zt$upper <- exp(pred_zt$prediction + pred_zt$se * qnorm(0.975))
# Let's convert to an incidence
pred_zt <- data.table(pred_zt)
pred_zt[, c("lin_pred","lower","upper") :=
lapply(.SD, function(x) x/n),
.SDcols = c("lin_pred","lower","upper")]
zt <- merge(zt, pred_zt, by = c("country","hh","strata_tst","ecf"))
ggplot(pred_zt, aes(x = name, y = lin_pred, ymin = lower, ymax = upper)) +
geom_point(size = 3) +
geom_errorbar(width = 0) +
coord_flip() +
geom_point(data = zt, aes(y = d/n.x, size = n.x), col = "purple", alpha = 0.4) +
guides(size = "none") +
theme_classic() + xlab("") + ylab("Incidence")
mean_vals <- c(1, 10)
var_cov <- matrix(c(2, 3, 1, 5), nrow = 2)
var_cov
x2 <- rnorm(1000, 0, 5)
## Intro to rnorm, mvrnorm
x1 <- rnorm(1000, 10, 2)
hist(x1)
x2 <- rnorm(1000, 0, 5)
hist(x2)
mean_vals <- c(10, 0)
var_cov <- matrix(c(4, 3, 3, 25), nrow = 2)
draws <- mvrnorm(1000, mean_vals, var_cov)
draws <- as.data.frame(draws)
ggpairs(draws)
ggpairs(draws)
grid.arrange(a, b, c)
a <- ggplot(draws, aes(x = V1, y = V2)) + geom_point()
b <- ggplot(draws, aes(x = V1)) + geom_histogram()
c <- ggplot(draws, aes(x= V2)) + geom_histogram() + coord_flip()
grid.arrange(a, b, c)
grid.arrange(a, b, c)
grid.arrange(a, b, c, ncol = 2)
grid.arrange(b, a, c, ncol = 2)
d <- ggplot() + theme_void()
grid.arrange(a, b, c, ncol = 2)
grid.arrange(b, grid.arrange(a,d, b, c, ncol = 2)a, c, ncol = 2)
grid.arrange(a,d, b, c, ncol = 2)
grid.arrange(b, d, a, c, ncol = 2)
grid.arrange(a,d, b, c, ncol = 2, widths = c(4, 1.4),
heights = c(1.4, 4))
grid.arrange(a,d, b, c, ncol = 2, widths = c(4, 1.4),
heights = c(1.4, 4))
grid.arrange(b ,d, a, c, ncol = 2, widths = c(4, 1.4),
heights = c(1.4, 4))
a <- ggplot(draws, aes(x = V1, y = V2)) + geom_point() + theme_classic()
b <- ggplot(draws, aes(x = V1)) + geom_histogram(col = "black") + theme_classic() +
xlab("")
c <- ggplot(draws, aes(x= V2)) + geom_histogram(col = "black") + coord_flip() + theme_classic() + xlab("")
d <- ggplot() + theme_void()
grid.arrange(b ,d, a, c, ncol = 2, widths = c(4, 1.4),
heights = c(1.4, 4))
a <- ggplot(draws, aes(x = V1, y = V2)) + geom_point() + theme_classic() +
geom_density_2d()
a
a <- ggplot(draws, aes(x = V1, y = V2)) + geom_point() + theme_classic() +
geom_density_2d_filled()
a
library(viridis)
a <- ggplot(draws, aes(x = V1, y = V2)) + geom_point() + theme_classic() +
stat_density_2d(aes(fill = ..level..), geom="polygon") + scale_fill_viridis()
b <- ggplot(draws, aes(x = V1)) + geom_histogram(col = "black") + theme_classic() +
xlab("")
c <- ggplot(draws, aes(x= V2)) + geom_histogram(col = "black") + coord_flip() + theme_classic() + xlab("")
d <- ggplot() + theme_void()
grid.arrange(b ,d, a, c, ncol = 2, widths = c(4, 1.4),
heights = c(1.4, 4))
a <- ggplot(draws, aes(x = V1, y = V2)) + theme_classic() +
stat_density_2d(aes(fill = ..level..), geom="polygon") + scale_fill_viridis() + geom_point() +
guides(fill = "none")
a
a <- ggplot(draws, aes(x = V1, y = V2)) + theme_classic() +
stat_density_2d(aes(fill = ..level..), geom="polygon") + scale_fill_viridis() + geom_point(alpha = 0.5) +
guides(fill = "none")
a
a <- ggplot(draws, aes(x = V1, y = V2)) + theme_classic() + geom_point() +
stat_density_2d(aes(fill = ..level..), geom="polygon") + scale_fill_viridis(alpha = 0.5) +
guides(fill = "none")
a
a <- ggplot(draws, aes(x = V1, y = V2)) + theme_classic() + geom_point() +
stat_density_2d(aes(fill = ..level..), geom="polygon") + scale_fill_viridis(alpha = 0.7) +
guides(fill = "none")
b <- ggplot(draws, aes(x = V1)) + geom_histogram(col = "black") + theme_classic() +
xlab("")
c <- ggplot(draws, aes(x= V2)) + geom_histogram(col = "black") + coord_flip() + theme_classic() + xlab("")
d <- ggplot() + theme_void()
grid.arrange(b ,d, a, c, ncol = 2, widths = c(4, 1.4),
heights = c(1.4, 4))
var_cov <- matrix(c(4, 1, 1, 25), nrow = 2)
draws <- mvrnorm(1000, mean_vals, var_cov)
draws <- as.data.frame(draws)
a <- ggplot(draws, aes(x = V1, y = V2)) + theme_classic() + geom_point() +
stat_density_2d(aes(fill = ..level..), geom="polygon") + scale_fill_viridis(alpha = 0.7) +
guides(fill = "none")
b <- ggplot(draws, aes(x = V1)) + geom_histogram(col = "black") + theme_classic() +
xlab("")
c <- ggplot(draws, aes(x= V2)) + geom_histogram(col = "black") + coord_flip() + theme_classic() + xlab("")
d <- ggplot() + theme_void()
grid.arrange(b ,d, a, c, ncol = 2, widths = c(4, 1.4),
heights = c(1.4, 4))
grid.arrange(b ,d, a, c, ncol = 2, widths = c(4, 1.4),
heights = c(1.4, 4))
var_cov <- matrix(c(4, 10, 10, 25), nrow = 2)
draws <- mvrnorm(1000, mean_vals, var_cov)
draws <- as.data.frame(draws)
a <- ggplot(draws, aes(x = V1, y = V2)) + theme_classic() + geom_point() +
stat_density_2d(aes(fill = ..level..), geom="polygon") + scale_fill_viridis(alpha = 0.7) +
guides(fill = "none")
a
mean_vals <- c(10, 0)
var_cov <- matrix(c(4, 5, 5, 25), nrow = 2)
draws <- mvrnorm(1000, mean_vals, var_cov)
draws <- as.data.frame(draws)
a <- ggplot(draws, aes(x = V1, y = V2)) + theme_classic() + geom_point() +
stat_density_2d(aes(fill = ..level..), geom="polygon") + scale_fill_viridis(alpha = 0.7) +
guides(fill = "none")
b <- ggplot(draws, aes(x = V1)) + geom_histogram(col = "black") + theme_classic() +
xlab("")
c <- ggplot(draws, aes(x= V2)) + geom_histogram(col = "black") + coord_flip() + theme_classic() + xlab("")
d <- ggplot() + theme_void()
grid.arrange(b ,d, a, c, ncol = 2, widths = c(4, 1.4),
heights = c(1.4, 4))
cov <- 1
var_vals <- c(1, 8)
var_cov <- matrix(c(var_vals[1], cov, cov, var_vals[2]))
var_cov
var_cov <- matrix(c(var_vals[1], cov, cov, var_vals[2]), nrow = 2)
var_cov
var_vals
cov
cov <- 3
var_cov <- matrix(c(var_vals[1], cov, cov, var_vals[2]), nrow = 2)
var_cov
## Make a function to show how changes interact
sim_multi2 <- function(x, mean_vals, var_vals, cov){
var_cov <- matrix(c(var_vals[1], cov, cov, var_vals[2]), nrow = 2)
draws <- mvrnorm(1000, mean_vals, var_cov)
draws <- as.data.frame(draws)
a <- ggplot(draws, aes(x = V1, y = V2)) + theme_classic() + geom_point() +
stat_density_2d(aes(fill = ..level..), geom="polygon") + scale_fill_viridis(alpha = 0.7) +
guides(fill = "none")
b <- ggplot(draws, aes(x = V1)) + geom_histogram(col = "black") + theme_classic() +
xlab("")
c <- ggplot(draws, aes(x= V2)) + geom_histogram(col = "black") + coord_flip() + theme_classic() + xlab("")
d <- ggplot() + theme_void()
grid.arrange(b ,d, a, c, ncol = 2, widths = c(4, 1.4),
heights = c(1.4, 4))
}
## Make a function to show how changes interact
sim_multi2 <- function(mean_vals, var_vals, cov){
var_cov <- matrix(c(var_vals[1], cov, cov, var_vals[2]), nrow = 2)
draws <- mvrnorm(1000, mean_vals, var_cov)
draws <- as.data.frame(draws)
a <- ggplot(draws, aes(x = V1, y = V2)) + theme_classic() + geom_point() +
stat_density_2d(aes(fill = ..level..), geom="polygon") + scale_fill_viridis(alpha = 0.7) +
guides(fill = "none")
b <- ggplot(draws, aes(x = V1)) + geom_histogram(col = "black") + theme_classic() +
xlab("")
c <- ggplot(draws, aes(x= V2)) + geom_histogram(col = "black") + coord_flip() + theme_classic() + xlab("")
d <- ggplot() + theme_void()
grid.arrange(b ,d, a, c, ncol = 2, widths = c(4, 1.4),
heights = c(1.4, 4))
}
sim_multi2(mean_vals = c(10, 20), var_vals = c(4, 1), cov = 3)
var_vals = c(4, 1)
cov = 3
var_cov <- matrix(c(var_vals[1], cov, cov, var_vals[2]), nrow = 2)
var_cov
w
draws <- mvrnorm(1000, mean_vals, var_cov)
sim_multi2(mean_vals = c(10, 20), var_vals = c(4, 0), cov = 3)
sim_multi2(mean_vals = c(10, 20), var_vals = c(4, 10), cov = 3)
